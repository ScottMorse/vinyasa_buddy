{"version":3,"file":"580.b8343e1f89e31432.js","sources":["webpack://biome/./node_modules/@ark-ui/react/dist/components/checkbox/checkbox-group.js","webpack://biome/./node_modules/@ark-ui/react/dist/components/checkbox/use-checkbox-group.js","webpack://biome/./node_modules/@ark-ui/react/dist/utils/use-controllable-state.js","webpack://biome/./node_modules/@chakra-ui/react/dist/esm/components/checkbox/checkbox.js","webpack://biome/./src/features/layout/view/LayoutDisclaimer.tsx","webpack://biome/./src/features/layout/view/LayoutTitle.tsx"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { checkboxAnatomy } from './checkbox.anatomy.js';\nimport { useCheckboxGroup } from './use-checkbox-group.js';\nimport { CheckboxGroupContextProvider } from './use-checkbox-group-context.js';\n\nconst CheckboxGroup = forwardRef((props, ref) => {\n  const [checkboxGroupProps, localProps] = createSplitProps()(props, [\n    \"defaultValue\",\n    \"value\",\n    \"onValueChange\",\n    \"disabled\",\n    \"invalid\",\n    \"readOnly\",\n    \"name\"\n  ]);\n  const checkboxGroup = useCheckboxGroup(checkboxGroupProps);\n  return /* @__PURE__ */ jsx(CheckboxGroupContextProvider, { value: checkboxGroup, children: /* @__PURE__ */ jsx(ark.div, { ref, role: \"group\", ...localProps, ...checkboxAnatomy.build().group.attrs }) });\n});\nCheckboxGroup.displayName = \"CheckboxGroup\";\n\nexport { CheckboxGroup };\n","'use client';\nimport { useControllableState } from '../../utils/use-controllable-state.js';\nimport { useEvent } from '../../utils/use-event.js';\n\nfunction useCheckboxGroup(props = {}) {\n  const { defaultValue, value: controlledValue, onValueChange, disabled, readOnly, name, invalid } = props;\n  const interactive = !(disabled || readOnly);\n  const onChangeProp = useEvent(onValueChange, { sync: true });\n  const [value, setValue] = useControllableState({\n    value: controlledValue,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const isChecked = (val) => {\n    return value.some((v) => String(v) === String(val));\n  };\n  const toggleValue = (val) => {\n    isChecked(val) ? removeValue(val) : addValue(val);\n  };\n  const addValue = (val) => {\n    if (!interactive) return;\n    if (isChecked(val)) return;\n    setValue(value.concat(val));\n  };\n  const removeValue = (val) => {\n    if (!interactive) return;\n    setValue(value.filter((v) => String(v) !== String(val)));\n  };\n  const getItemProps = (props2) => {\n    return {\n      checked: props2.value != null ? isChecked(props2.value) : void 0,\n      onCheckedChange() {\n        if (props2.value != null) {\n          toggleValue(props2.value);\n        }\n      },\n      name,\n      disabled,\n      readOnly,\n      invalid\n    };\n  };\n  return {\n    isChecked,\n    value,\n    name,\n    disabled: !!disabled,\n    readOnly: !!readOnly,\n    invalid: !!invalid,\n    setValue,\n    addValue,\n    toggleValue,\n    getItemProps\n  };\n}\n\nexport { useCheckboxGroup };\n","'use client';\nimport { useState, useCallback } from 'react';\n\nfunction useControllableState(props) {\n  const { value, onChange, defaultValue } = props;\n  const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue);\n  const controlled = value !== void 0;\n  const currentValue = controlled ? value : uncontrolledValue;\n  const setValue = useCallback(\n    (value2) => {\n      if (controlled) {\n        return onChange?.(value2);\n      }\n      setUncontrolledValue(value2);\n      return onChange?.(value2);\n    },\n    [controlled, onChange]\n  );\n  return [currentValue, setValue];\n}\n\nexport { useControllableState };\n","\"use strict\";\n\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { Checkbox, useCheckboxContext } from '@ark-ui/react/checkbox';\nimport { forwardRef } from 'react';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { chakra } from '../../styled-system/factory.js';\nimport { Checkmark } from '../checkmark/checkmark.js';\n\nconst {\n  withProvider,\n  withContext,\n  useStyles: useCheckboxStyles,\n  PropsProvider\n} = createSlotRecipeContext({ key: \"checkbox\" });\nconst CheckboxRootProvider = withProvider(Checkbox.RootProvider, \"root\", { forwardAsChild: true });\nconst CheckboxRoot = withProvider(\n  Checkbox.Root,\n  \"root\",\n  { forwardAsChild: true }\n);\nconst CheckboxPropsProvider = PropsProvider;\nconst CheckboxLabel = withContext(\n  Checkbox.Label,\n  \"label\",\n  { forwardAsChild: true }\n);\nconst CheckboxIndicator = forwardRef(function CheckboxIndicator2(props, ref) {\n  const { checked, indeterminate, ...rest } = props;\n  const api = useCheckboxContext();\n  const styles = useCheckboxStyles();\n  if (checked && api.checked) {\n    return /* @__PURE__ */ jsx(\n      chakra.svg,\n      {\n        ref,\n        asChild: true,\n        ...rest,\n        css: [styles.indicator, props.css],\n        children: checked\n      }\n    );\n  }\n  if (indeterminate && api.indeterminate) {\n    return /* @__PURE__ */ jsx(\n      chakra.svg,\n      {\n        ref,\n        asChild: true,\n        ...rest,\n        css: [styles.indicator, props.css],\n        children: indeterminate\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    Checkmark,\n    {\n      ref,\n      checked: api.checked,\n      indeterminate: api.indeterminate,\n      disabled: api.disabled,\n      unstyled: true,\n      ...rest,\n      css: [styles.indicator, props.css]\n    }\n  );\n});\nconst CheckboxControl = withContext(\n  Checkbox.Control,\n  \"control\",\n  {\n    forwardAsChild: true,\n    defaultProps: { children: /* @__PURE__ */ jsx(CheckboxIndicator, {}) }\n  }\n);\nconst CheckboxGroup = chakra(\n  Checkbox.Group,\n  {\n    base: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"1.5\"\n    }\n  },\n  { forwardAsChild: true }\n);\nconst CheckboxContext = Checkbox.Context;\nconst CheckboxHiddenInput = Checkbox.HiddenInput;\n\nexport { CheckboxContext, CheckboxControl, CheckboxGroup, CheckboxHiddenInput, CheckboxIndicator, CheckboxLabel, CheckboxPropsProvider, CheckboxRoot, CheckboxRootProvider, useCheckboxStyles };\n","import { getPosture } from '@/features/posture';\nimport { StickFigure } from '@/features/stickFigure';\nimport {\n  useAcceptedDisclaimer,\n  useDisclaimerIgnored,\n  useSetAcceptedDisclaimer,\n  useSetDisclaimerIgnored,\n  useWindowWidth,\n} from '@/features/store';\nimport { Dialog } from '@/features/chakra/uiSnippets';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  DialogPositioner,\n  Stack,\n  Text,\n} from '@chakra-ui/react';\nimport { LayoutTitle } from './LayoutTitle';\nimport { useState } from 'react';\n\nexport const LayoutDisclaimer = () => {\n  const acceptedDisclaimer = useAcceptedDisclaimer();\n  const disclaimerIgnored = useDisclaimerIgnored();\n  const setAcceptedDisclaimer = useSetAcceptedDisclaimer();\n  const setDisclaimerIgnored = useSetDisclaimerIgnored();\n\n  const [isIgnoreSelected, setIsIgnoreSelected] = useState(false);\n\n  const windowWidth = useWindowWidth();\n\n  return (\n    <Dialog.Root\n      open={!acceptedDisclaimer && !disclaimerIgnored}\n      placement=\"center\"\n      size={{ base: 'lg', md: 'xl' }}\n    >\n      <Dialog.Content\n        border=\"0.5rem solid\"\n        borderColor=\"primary\"\n        borderRadius=\"3xl\"\n        w=\"fit-content\"\n        maxW=\"calc(100vw - 3rem)\"\n      >\n        <Dialog.Header>\n          <Dialog.Title textAlign=\"center\" w=\"100%\">\n            <LayoutTitle fontSize={{ base: '2.5rem', md: '4rem' }} />\n          </Dialog.Title>\n        </Dialog.Header>\n        <Dialog.Body>\n          <Stack align=\"center\">\n            <StickFigure\n              position={getPosture('downwardDog')?.stickFigurePosition ?? {}}\n              config={{\n                headRadius:\n                  windowWidth < 450 ? 12 : windowWidth < 768 ? 14 : 20,\n                lineWidth: windowWidth < 450 ? 8 : windowWidth < 768 ? 10 : 12,\n                cropToPosture: true,\n              }}\n            />\n          </Stack>\n          <Text\n            textStyle=\"body\"\n            textAlign=\"center\"\n            fontSize={{ base: '1.4rem', sm: '1.6rem', md: '2rem' }}\n            maxW=\"50rem\"\n          >\n            <Box mb=\"1rem\">\n              Hi! I'm{' '}\n              <Box as=\"span\" color=\"primary\">\n                Vinyasa\n              </Box>{' '}\n              <Box as=\"span\" color=\"secondary\">\n                Buddy\n              </Box>\n              .\n            </Box>\n            <Box as=\"span\" color=\"textSecondary\">\n              Please remember:\n            </Box>{' '}\n            I'm not a human and am just here to help you remember each posture.\n            <Box mt=\"1rem\">Don't attempt to do them just like me!</Box>\n          </Text>\n        </Dialog.Body>\n        <Dialog.Footer justifyContent=\"center\" mt=\"0.5rem\">\n          <Stack gap=\"1.5rem\" align=\"center\">\n            <Checkbox.Root\n              checked={isIgnoreSelected}\n              onChange={() => setIsIgnoreSelected(!isIgnoreSelected)}\n              cursor=\"pointer\"\n              size=\"lg\"\n            >\n              <Checkbox.HiddenInput />\n              <Checkbox.Control>\n                <Checkbox.Indicator />\n              </Checkbox.Control>\n              <Checkbox.Label\n                fontSize={{ base: '1.6rem', md: '2rem' }}\n                color=\"textPrimary\"\n              >\n                Don't show this again\n              </Checkbox.Label>\n            </Checkbox.Root>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setAcceptedDisclaimer(true);\n                if (isIgnoreSelected) {\n                  setDisclaimerIgnored(true);\n                }\n              }}\n              width=\"fit-content\"\n            >\n              Got it!\n            </Button>\n          </Stack>\n        </Dialog.Footer>\n      </Dialog.Content>\n    </Dialog.Root>\n  );\n};\n","import { Box, type BoxProps } from '@chakra-ui/react';\n\nexport interface LayoutTitleProps {\n  fontSize: BoxProps['fontSize'];\n}\n\nexport const LayoutTitle = ({ fontSize }: LayoutTitleProps) => (\n  <Box as=\"h1\" fontSize={fontSize} wordSpacing=\"1rem\">\n    <Box as=\"span\" color=\"primary\" mr=\"0.25em\">\n      Vinyasa\n    </Box>\n    <Box as=\"span\" color=\"secondary\">\n      Buddy\n    </Box>\n  </Box>\n);\n"],"names":["CheckboxGroup","forwardRef","props","ref","checkboxGroupProps","localProps","createSplitProps","checkboxGroup","useCheckboxGroup","defaultValue","controlledValue","onValueChange","disabled","readOnly","name","invalid","interactive","value","setValue","useControllableState","onChange","uncontrolledValue","setUncontrolledValue","useState","controlled","useCallback","value2","useEvent","isChecked","val","v","String","toggleValue","removeValue","addValue","getItemProps","props2","jsx","CheckboxGroupContextProvider","ark","checkboxAnatomy","withProvider","withContext","useCheckboxStyles","PropsProvider","createSlotRecipeContext","Checkbox","CheckboxRoot","CheckboxLabel","CheckboxIndicator","checked","indeterminate","rest","api","useCheckboxContext","styles","chakra","Checkmark","CheckboxControl","CheckboxHiddenInput","LayoutDisclaimer","acceptedDisclaimer","useAcceptedDisclaimer","disclaimerIgnored","useDisclaimerIgnored","setAcceptedDisclaimer","useSetAcceptedDisclaimer","setDisclaimerIgnored","useSetDisclaimerIgnored","isIgnoreSelected","setIsIgnoreSelected","windowWidth","useWindowWidth","Dialog","LayoutTitle","Stack","StickFigure","getPosture","Text","Box","Button","fontSize"],"mappings":"6UASA,IAAMA,EAAgBC,AAAAA,GAAAA,EAAAA,UAAAA,AAAAA,EAAW,CAACC,EAAOC,KACvC,GAAM,CAACC,EAAoBC,EAAW,CAAGC,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,IAAmBJ,EAAO,CACjE,eACA,QACA,gBACA,WACA,UACA,WACA,OACD,EACKK,EAAgBC,ACfxB,W,IAA0BN,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,AAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAQ,CAAC,EAC3B,CAAEO,aAAAA,CAAY,CAAE,MAAOC,CAAe,CAAEC,cAAAA,CAAa,CAAEC,SAAAA,CAAQ,CAAEC,SAAAA,CAAQ,CAAEC,KAAAA,CAAI,CAAEC,QAAAA,CAAO,CAAE,CAAGb,EAC7Fc,EAAc,CAAEJ,CAAAA,GAAYC,CAAO,EAEnC,CAACI,EAAOC,EAAS,CAAGC,ACL5B,SAA8BjB,CAAK,EACjC,GAAM,CAAEe,MAAAA,CAAK,CAAEG,SAAAA,CAAQ,CAAEX,aAAAA,CAAY,CAAE,CAAGP,EACpC,CAACmB,EAAmBC,EAAqB,CAAGC,AAAAA,GAAAA,EAAAA,QAAAA,AAAAA,EAASd,GACrDe,EAAaP,AAAU,KAAK,IAAfA,EAYnB,MAAO,CAXcO,EAAaP,EAAQI,EACzBI,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EACf,AAACC,IACKF,GAGJF,EAAqBI,GAFZN,IAAWM,IAKtB,CAACF,EAAYJ,EAAS,EAEO,AACjC,EDXiD,CAC7C,MAAOV,EACP,aAAcD,GAAgB,EAAE,CAChC,SAJmBkB,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,EAAShB,EAAe,CAAE,KAAM,EAAK,EAK1D,GACMiB,EAAY,AAACC,GACVZ,EAAM,IAAI,CAAC,AAACa,GAAMC,OAAOD,KAAOC,OAAOF,IAE1CG,EAAc,AAACH,IACnBD,EAAUC,GAAOI,EAAYJ,GAAOK,EAASL,EAC/C,EACMK,EAAW,AAACL,IACXb,IACDY,EAAUC,IACdX,EAASD,EAAM,MAAM,CAACY,IACxB,EACMI,EAAc,AAACJ,IACdb,GACLE,EAASD,EAAM,MAAM,CAAC,AAACa,GAAMC,OAAOD,KAAOC,OAAOF,IACpD,EAeA,MAAO,CACLD,UAAAA,EACAX,MAAAA,EACAH,KAAAA,EACA,SAAU,CAAC,CAACF,EACZ,SAAU,CAAC,CAACC,EACZ,QAAS,CAAC,CAACE,EACXG,SAAAA,EACAgB,SAAAA,EACAF,YAAAA,EACAG,aAxBmB,AAACC,GACb,EACL,QAASA,AAAgB,MAAhBA,EAAO,KAAK,CAAWR,EAAUQ,EAAO,KAAK,EAAI,KAAK,EAC/D,kBACMA,AAAgB,MAAhBA,EAAO,KAAK,EACdJ,EAAYI,EAAO,KAAK,CAE5B,EACAtB,KAAAA,EACAF,SAAAA,EACAC,SAAAA,EACAE,QAAAA,CACF,EAaF,CACF,EDnCyCX,GACvC,MAAuBiC,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAIC,EAAAA,CAA4BA,CAAE,CAAE,MAAO/B,EAAe,SAA0B8B,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAIE,EAAAA,CAAAA,CAAAA,GAAO,CAAE,CAAEpC,IAAAA,EAAK,KAAM,QAAS,GAAGE,CAAU,CAAE,GAAGmC,EAAAA,CAAAA,CAAAA,KAAqB,GAAG,KAAK,CAAC,KAAK,AAAC,EAAG,EACzM,EACAxC,CAAAA,EAAc,WAAW,CAAG,gB,sDGb5B,GAAM,CACJyC,aAAAA,CAAY,CACZC,YAAAA,CAAW,CACX,UAAWC,CAAiB,CAC5BC,cAAAA,CAAa,CACd,CAAGC,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,EAAwB,CAAE,IAAK,UAAW,GACjBJ,EAAaK,EAAAA,CAAqB,CAAE,OAAQ,CAAE,eAAgB,EAAK,GAChG,IAAMC,EAAeN,EACnBK,EAAAA,CAAa,CACb,OACA,CAAE,eAAgB,EAAK,GAGnBE,EAAgBN,EACpBI,EAAAA,CAAc,CACd,QACA,CAAE,eAAgB,EAAK,GAEnBG,EAAoBhD,AAAAA,GAAAA,EAAAA,UAAAA,AAAAA,EAAW,SAA4BC,CAAK,CAAEC,CAAG,EACzE,GAAM,CAAE+C,QAAAA,CAAO,CAAEC,cAAAA,CAAa,CAAE,GAAGC,EAAM,CAAGlD,EACtCmD,EAAMC,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,IACNC,EAASZ,WACf,AAAIO,GAAWG,EAAI,OAAO,CACDhB,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EACrBmB,EAAAA,CAAAA,CAAAA,GAAU,CACV,CACErD,IAAAA,EACA,QAAS,GACT,GAAGiD,CAAI,CACP,IAAK,CAACG,EAAO,SAAS,CAAErD,EAAM,GAAG,CAAC,CAClC,SAAUgD,CACZ,GAGAC,GAAiBE,EAAI,aAAa,CACbhB,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EACrBmB,EAAAA,CAAAA,CAAAA,GAAU,CACV,CACErD,IAAAA,EACA,QAAS,GACT,GAAGiD,CAAI,CACP,IAAK,CAACG,EAAO,SAAS,CAAErD,EAAM,GAAG,CAAC,CAClC,SAAUiD,CACZ,GAGmBd,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EACrBoB,EAAAA,CAASA,CACT,CACEtD,IAAAA,EACA,QAASkD,EAAI,OAAO,CACpB,cAAeA,EAAI,aAAa,CAChC,SAAUA,EAAI,QAAQ,CACtB,SAAU,GACV,GAAGD,CAAI,CACP,IAAK,CAACG,EAAO,SAAS,CAAErD,EAAM,GAAG,CAAC,AACpC,EAEJ,GACMwD,EAAkBhB,EACtBI,EAAAA,CAAgB,CAChB,UACA,CACE,eAAgB,GAChB,aAAc,CAAE,SAA0BT,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAIY,EAAmB,CAAC,EAAG,CACvE,GAEoBO,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,EACpBV,EACA,CACE,KAAM,CACJ,QAAS,OACT,cAAe,SACf,IAAK,KACP,CACF,EACA,CAAE,eAAgB,EAAK,GAEDA,EAAAA,CAAgB,CACxC,IAAMa,EAAsBb,EAAAA,CAAoB,C,wBCnEzC,IAAMc,EAAmB,KAC9B,IAAMC,EAAqBC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IACrBC,EAAoBC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IACpBC,EAAwBC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IACxBC,EAAuBC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IAEvB,CAACC,EAAkBC,EAAoB,CAAG/C,AAAAA,GAAAA,EAAAA,QAAAA,AAAAA,EAAS,IAEnDgD,EAAcC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IAEpB,MACE,UAACC,EAAAA,GAAAA,CAAAA,IAAW,EACV,KAAM,CAACZ,GAAsB,CAACE,EAC9B,UAAU,SACV,KAAM,CAAE,KAAM,KAAM,GAAI,IAAK,E,SAE7B,WAACU,EAAAA,GAAAA,CAAAA,OAAc,EACb,OAAO,eACP,YAAY,UACZ,aAAa,MACb,EAAE,cACF,KAAK,qB,UAEL,UAACA,EAAAA,GAAAA,CAAAA,MAAa,E,SACZ,UAACA,EAAAA,GAAAA,CAAAA,KAAY,EAAC,UAAU,SAAS,EAAE,O,SACjC,UAACC,EAAAA,CAAWA,CAAAA,CAAC,SAAU,CAAE,KAAM,SAAU,GAAI,MAAO,C,OAGxD,WAACD,EAAAA,GAAAA,CAAAA,IAAW,E,UACV,UAACE,EAAAA,CAAKA,CAAAA,CAAC,MAAM,S,SACX,UAACC,EAAAA,CAAWA,CAAAA,CACV,SAAUC,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,EAAW,gBAAgB,qBAAuB,CAAC,EAC7D,OAAQ,CACN,WACEN,EAAc,IAAM,GAAKA,EAAc,IAAM,GAAK,GACpD,UAAWA,EAAc,IAAM,EAAIA,EAAc,IAAM,GAAK,GAC5D,cAAe,EACjB,C,KAGJ,WAACO,EAAAA,CAAIA,CAAAA,CACH,UAAU,OACV,UAAU,SACV,SAAU,CAAE,KAAM,SAAU,GAAI,SAAU,GAAI,MAAO,EACrD,KAAK,Q,UAEL,WAACC,EAAAA,CAAGA,CAAAA,CAAC,GAAG,O,UAAO,UACL,IACR,UAACA,EAAAA,CAAGA,CAAAA,CAAC,GAAG,OAAO,MAAM,U,SAAU,S,GAExB,IACP,UAACA,EAAAA,CAAGA,CAAAA,CAAC,GAAG,OAAO,MAAM,Y,SAAY,O,GAE3B,I,GAGR,UAACA,EAAAA,CAAGA,CAAAA,CAAC,GAAG,OAAO,MAAM,gB,SAAgB,kB,GAE9B,IAAI,sEAEX,UAACA,EAAAA,CAAGA,CAAAA,CAAC,GAAG,O,SAAO,wC,SAGnB,UAACN,EAAAA,GAAAA,CAAAA,MAAa,EAAC,eAAe,SAAS,GAAG,S,SACxC,WAACE,EAAAA,CAAKA,CAAAA,CAAC,IAAI,SAAS,MAAM,S,UACxB,WAAC7B,EAAa,CACZ,QAASuB,EACT,SAAU,IAAMC,EAAoB,CAACD,GACrC,OAAO,UACP,KAAK,K,UAEL,UAACvB,EAAoB,IACrB,UAACA,EAAgB,C,SACf,UAACA,EAAkB,G,GAErB,UAACA,EAAc,CACb,SAAU,CAAE,KAAM,SAAU,GAAI,MAAO,EACvC,MAAM,c,SACP,uB,MAIH,UAACkC,EAAAA,CAAMA,CAAAA,CACL,MAAM,UACN,QAAS,KACPf,EAAsB,IAClBI,GACFF,EAAqB,GAEzB,EACA,MAAM,c,SACP,S,YAQb,C,gEClHO,IAAMO,EAAc,AAAC,I,GAAA,CAAEO,SAAAA,CAAQ,CAAoB,G,MACxD,WAACF,EAAAA,CAAGA,CAAAA,CAAC,GAAG,KAAK,SAAUE,EAAU,YAAY,O,UAC3C,UAACF,EAAAA,CAAGA,CAAAA,CAAC,GAAG,OAAO,MAAM,UAAU,GAAG,S,SAAS,S,GAG3C,UAACA,EAAAA,CAAGA,CAAAA,CAAC,GAAG,OAAO,MAAM,Y,SAAY,O"}