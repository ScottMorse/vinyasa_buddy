{"version":3,"file":"449.6776e13383da091d.js","sources":["webpack://biome/./src/features/stickFigure/stickFigurePosition.ts","webpack://biome/./src/features/stickFigure/defaultPosition.ts","webpack://biome/./node_modules/@chakra-ui/react/dist/esm/styled-system/use-token.js","webpack://biome/./src/features/stickFigure/view/StickFigure.tsx"],"sourcesContent":["export interface StickFigureConfig {\n  headRadius: number;\n  lineWidth: number;\n  cropToPosture?: boolean;\n}\n\nexport interface CircleDisplay {\n  x: number;\n  y: number;\n  radius: number;\n}\n\nexport interface LineDisplay {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n}\n\ninterface StickFigureDisplay {\n  width: number;\n  height: number;\n  lineWidth: number;\n  floor: LineDisplay;\n  head: CircleDisplay;\n  neck: LineDisplay;\n  chest: LineDisplay;\n  abdomen: LineDisplay;\n  leftUpperArm: LineDisplay;\n  leftLowerArm: LineDisplay;\n  rightUpperArm: LineDisplay;\n  rightLowerArm: LineDisplay;\n  leftUpperLeg: LineDisplay;\n  leftLowerLeg: LineDisplay;\n  rightUpperLeg: LineDisplay;\n  rightLowerLeg: LineDisplay;\n}\n\nexport interface StickFigurePosition {\n  head: {\n    neckAngle: number;\n  };\n  neck: {\n    chestAngle: number;\n  };\n  chest: {\n    abdomenAngle: number;\n  };\n  abdomen: {\n    hipAngle: number;\n  };\n  leftUpperArm: {\n    shoulderAngle: number;\n  };\n  rightUpperArm: {\n    shoulderAngle: number;\n  };\n  leftLowerArm: {\n    elbowAngle: number;\n  };\n  rightLowerArm: {\n    elbowAngle: number;\n  };\n  leftUpperLeg: {\n    hipAngle: number;\n  };\n  rightUpperLeg: {\n    hipAngle: number;\n  };\n  leftLowerLeg: {\n    kneeAngle: number;\n  };\n  rightLowerLeg: {\n    kneeAngle: number;\n  };\n}\n\n/** Drawn from top to bottom, so x1,y1 points are higher than x2,y2 points */\nconst getNeutralStickFigure = ({\n  headRadius,\n  lineWidth,\n}: StickFigureConfig) => {\n  const neckLength = headRadius;\n  const upperArmLength = neckLength * 2.5;\n  const lowerArmLength = upperArmLength;\n  const torsoLength = neckLength * 5;\n  const chestLength = torsoLength / 2;\n  const abdomenLength = chestLength;\n  const upperLegLength = torsoLength;\n  const lowerLegLength = upperLegLength;\n\n  const height =\n    headRadius * 2 +\n    neckLength +\n    torsoLength +\n    upperLegLength +\n    lowerLegLength +\n    upperArmLength +\n    lowerArmLength +\n    lineWidth * 2;\n  const width = height;\n\n  const headX = width / 2;\n  const headY = headRadius + lineWidth;\n\n  const neckX1 = headX;\n  const neckY1 = headY + headRadius;\n  const neckX2 = headX;\n  const neckY2 = headY + headRadius + neckLength;\n\n  const chestX1 = neckX2;\n  const chestY1 = headY + headRadius + neckLength;\n  const chestX2 = chestX1;\n  const chestY2 = headY + headRadius + neckLength + chestLength;\n\n  const abdomenX1 = chestX2;\n  const abdomenY1 = headY + headRadius + neckLength + chestLength;\n  const abdomenX2 = abdomenX1;\n  const abdomenY2 =\n    headY + headRadius + neckLength + chestLength + abdomenLength;\n\n  const leftUpperArmX1 = neckX2;\n  const leftUpperArmY1 = neckY2;\n  const leftUpperArmX2 = neckX2;\n  const leftUpperArmY2 = neckY2 + upperArmLength;\n\n  const leftLowerArmX1 = leftUpperArmX2;\n  const leftLowerArmY1 = leftUpperArmY2;\n  const leftLowerArmX2 = leftUpperArmX2;\n  const leftLowerArmY2 = leftUpperArmY2 + lowerArmLength;\n\n  const rightUpperArmX1 = leftUpperArmX1;\n  const rightUpperArmY1 = leftUpperArmY1;\n  const rightUpperArmX2 = leftUpperArmX2;\n  const rightUpperArmY2 = leftUpperArmY2;\n\n  const rightLowerArmX1 = rightUpperArmX2;\n  const rightLowerArmY1 = rightUpperArmY2;\n  const rightLowerArmX2 = rightUpperArmX2;\n  const rightLowerArmY2 = rightUpperArmY2;\n\n  const leftUpperLegX1 = abdomenX2;\n  const leftUpperLegY1 = abdomenY2;\n  const leftUpperLegX2 = abdomenX2;\n  const leftUpperLegY2 = abdomenY2 + upperLegLength;\n\n  const leftLowerLegX1 = leftUpperLegX2;\n  const leftLowerLegY1 = leftUpperLegY2;\n  const leftLowerLegX2 = leftUpperLegX2;\n  const leftLowerLegY2 = leftUpperLegY2 + lowerLegLength;\n\n  const rightUpperLegX1 = leftUpperLegX1;\n  const rightUpperLegY1 = leftUpperLegY1;\n  const rightUpperLegX2 = leftUpperLegX2;\n  const rightUpperLegY2 = leftUpperLegY2;\n\n  const rightLowerLegX1 = rightUpperLegX2;\n  const rightLowerLegY1 = rightUpperLegY2;\n  const rightLowerLegX2 = rightUpperLegX2;\n  const rightLowerLegY2 = rightUpperLegY2 + lowerLegLength;\n\n  return {\n    width,\n    height,\n    head: {\n      x: headX,\n      y: headY,\n      radius: headRadius,\n    },\n    neck: {\n      x1: neckX1,\n      y1: neckY1,\n      x2: neckX2,\n      y2: neckY2,\n      length: neckLength,\n    },\n    chest: {\n      x1: chestX1,\n      y1: chestY1,\n      x2: chestX2,\n      y2: chestY2,\n      length: chestLength,\n    },\n    abdomen: {\n      x1: abdomenX1,\n      y1: abdomenY1,\n      x2: abdomenX2,\n      y2: abdomenY2,\n      length: abdomenLength,\n    },\n    leftUpperLeg: {\n      x1: leftUpperLegX1,\n      y1: leftUpperLegY1,\n      x2: leftUpperLegX2,\n      y2: leftUpperLegY2,\n      length: upperLegLength,\n    },\n    leftLowerLeg: {\n      x1: leftLowerLegX1,\n      y1: leftLowerLegY1,\n      x2: leftLowerLegX2,\n      y2: leftLowerLegY2,\n      length: lowerLegLength,\n    },\n    rightUpperLeg: {\n      x1: rightUpperLegX1,\n      y1: rightUpperLegY1,\n      x2: rightUpperLegX2,\n      y2: rightUpperLegY2,\n      length: upperLegLength,\n    },\n    rightLowerLeg: {\n      x1: rightLowerLegX1,\n      y1: rightLowerLegY1,\n      x2: rightLowerLegX2,\n      y2: rightLowerLegY2,\n      length: lowerLegLength,\n    },\n    leftUpperArm: {\n      x1: leftUpperArmX1,\n      y1: leftUpperArmY1,\n      x2: leftUpperArmX2,\n      y2: leftUpperArmY2,\n      length: upperArmLength,\n    },\n    leftLowerArm: {\n      x1: leftLowerArmX1,\n      y1: leftLowerArmY1,\n      x2: leftLowerArmX2,\n      y2: leftLowerArmY2,\n      length: lowerArmLength,\n    },\n    rightUpperArm: {\n      x1: rightUpperArmX1,\n      y1: rightUpperArmY1,\n      x2: rightUpperArmX2,\n      y2: rightUpperArmY2,\n      length: upperArmLength,\n    },\n    rightLowerArm: {\n      x1: rightLowerArmX1,\n      y1: rightLowerArmY1,\n      x2: rightLowerArmX2,\n      y2: rightLowerArmY2,\n      length: lowerArmLength,\n    },\n  };\n};\n\nconst angleLine = (\n  originX: number,\n  originY: number,\n  length: number,\n  angle: number,\n) => ({\n  x1: originX,\n  y1: originY,\n  x2: originX + length * Math.cos((angle * Math.PI) / 180),\n  y2: originY + length * Math.sin((angle * Math.PI) / 180),\n});\n\nconst angleCircleOrigin = (\n  edgeX: number,\n  edgeY: number,\n  radius: number,\n  angle: number,\n) => ({\n  x: edgeX - Math.cos((angle * Math.PI) / 180) * radius,\n  y: edgeY - Math.sin((angle * Math.PI) / 180) * radius,\n});\n\nconst offsetLine = (line: LineDisplay, offsetY: number, offsetX: number) => ({\n  ...line,\n  y1: line.y1 + offsetY,\n  y2: line.y2 + offsetY,\n  x1: line.x1 + offsetX,\n  x2: line.x2 + offsetX,\n});\n\nconst NEUTRAL_POSITION: StickFigurePosition = {\n  head: {\n    neckAngle: 0,\n  },\n  neck: {\n    chestAngle: 0,\n  },\n  chest: {\n    abdomenAngle: 0,\n  },\n  abdomen: {\n    hipAngle: 0,\n  },\n  leftUpperArm: {\n    shoulderAngle: 0,\n  },\n  rightUpperArm: {\n    shoulderAngle: 0,\n  },\n  leftLowerArm: {\n    elbowAngle: 0,\n  },\n  rightLowerArm: {\n    elbowAngle: 0,\n  },\n  leftUpperLeg: {\n    hipAngle: 0,\n  },\n  leftLowerLeg: {\n    kneeAngle: 0,\n  },\n  rightUpperLeg: {\n    hipAngle: 0,\n  },\n  rightLowerLeg: {\n    kneeAngle: 0,\n  },\n};\n\nexport const positionStickFigure = (\n  _position: Partial<StickFigurePosition>,\n  config: StickFigureConfig,\n): StickFigureDisplay => {\n  const neutral = getNeutralStickFigure(config);\n\n  const position = {\n    ...NEUTRAL_POSITION,\n    ..._position,\n  };\n\n  const spacing = config.lineWidth * 1.6;\n\n  const abdomenHipAngle = -position.abdomen.hipAngle - 90;\n  const abdomen = angleLine(\n    neutral.abdomen.x2,\n    neutral.abdomen.y2,\n    neutral.abdomen.length,\n    abdomenHipAngle,\n  );\n\n  const chestAbdomenAngle = abdomenHipAngle - position.chest.abdomenAngle;\n  const chest = angleLine(\n    abdomen.x2,\n    abdomen.y2,\n    neutral.chest.length,\n    chestAbdomenAngle,\n  );\n\n  const neckChestAngle = chestAbdomenAngle - position.neck.chestAngle;\n  const neck = angleLine(\n    chest.x2,\n    chest.y2,\n    neutral.neck.length,\n    neckChestAngle,\n  );\n\n  const head = angleCircleOrigin(\n    neck.x2,\n    neck.y2 - spacing,\n    config.headRadius,\n    neckChestAngle + -position.head.neckAngle - 180,\n  );\n\n  const leftUpperArmShoulderAngle =\n    chestAbdomenAngle - position.leftUpperArm.shoulderAngle - 90;\n  const leftUpperArm = angleLine(\n    neck.x1 - spacing,\n    neck.y1,\n    neutral.leftUpperArm.length,\n    leftUpperArmShoulderAngle,\n  );\n\n  const leftLowerArm = angleLine(\n    leftUpperArm.x2,\n    leftUpperArm.y2,\n    neutral.leftLowerArm.length,\n    leftUpperArmShoulderAngle + position.leftLowerArm.elbowAngle,\n  );\n\n  const rightUpperArmShoulderAngle =\n    chestAbdomenAngle + position.rightUpperArm.shoulderAngle + 90;\n  const rightUpperArm = angleLine(\n    neck.x1 + spacing,\n    neck.y1,\n    neutral.rightUpperArm.length,\n    rightUpperArmShoulderAngle,\n  );\n\n  const rightLowerArm = angleLine(\n    rightUpperArm.x2,\n    rightUpperArm.y2,\n    neutral.rightLowerArm.length,\n    rightUpperArmShoulderAngle - position.rightLowerArm.elbowAngle,\n  );\n\n  const leftUpperLegHipAngle = position.leftUpperLeg.hipAngle - 270;\n  const leftUpperLeg = angleLine(\n    abdomen.x1 - spacing,\n    abdomen.y1,\n    neutral.leftUpperLeg.length,\n    leftUpperLegHipAngle,\n  );\n\n  const leftLowerLeg = angleLine(\n    leftUpperLeg.x2,\n    leftUpperLeg.y2,\n    neutral.leftLowerLeg.length,\n    leftUpperLegHipAngle - position.leftLowerLeg.kneeAngle,\n  );\n\n  const rightUpperLegHipAngle = -position.rightUpperLeg.hipAngle + 90;\n  const rightUpperLeg = angleLine(\n    abdomen.x1 + spacing,\n    abdomen.y1,\n    neutral.rightUpperLeg.length,\n    rightUpperLegHipAngle,\n  );\n\n  const rightLowerLeg = angleLine(\n    rightUpperLeg.x2,\n    rightUpperLeg.y2,\n    neutral.rightLowerLeg.length,\n    rightUpperLegHipAngle + position.rightLowerLeg.kneeAngle,\n  );\n\n  const result = {\n    width: neutral.width,\n    height: neutral.height,\n    lineWidth: config.lineWidth,\n    head: {\n      ...head,\n      radius: config.headRadius,\n    },\n    abdomen,\n    chest,\n    neck,\n    leftUpperArm,\n    leftLowerArm,\n    rightUpperArm,\n    rightLowerArm,\n    leftUpperLeg,\n    leftLowerLeg,\n    rightUpperLeg,\n    rightLowerLeg,\n  };\n\n  const allYs = [\n    result.head.y + result.head.radius,\n    result.head.y - result.head.radius,\n    result.neck.y1,\n    result.neck.y2,\n    result.chest.y1,\n    result.chest.y2,\n    result.abdomen.y1,\n    result.abdomen.y2,\n    result.leftUpperArm.y1,\n    result.leftUpperArm.y2,\n    result.leftLowerArm.y1,\n    result.leftLowerArm.y2,\n    result.rightUpperArm.y1,\n    result.rightUpperArm.y2,\n    result.rightLowerArm.y1,\n    result.rightLowerArm.y2,\n    result.leftUpperLeg.y1,\n    result.leftUpperLeg.y2,\n    result.rightUpperLeg.y1,\n    result.rightUpperLeg.y2,\n    result.leftLowerLeg.y1,\n    result.leftLowerLeg.y2,\n    result.rightLowerLeg.y1,\n    result.rightLowerLeg.y2,\n  ];\n\n  const allXs = [\n    result.head.x + result.head.radius,\n    result.head.x - result.head.radius,\n    result.neck.x1,\n    result.neck.x2,\n    result.chest.x1,\n    result.chest.x2,\n    result.abdomen.x1,\n    result.abdomen.x2,\n    result.leftUpperArm.x1,\n    result.leftUpperArm.x2,\n    result.leftLowerArm.x1,\n    result.leftLowerArm.x2,\n    result.rightUpperArm.x1,\n    result.rightUpperArm.x2,\n    result.rightLowerArm.x1,\n    result.rightLowerArm.x2,\n    result.leftUpperLeg.x1,\n    result.leftUpperLeg.x2,\n    result.rightUpperLeg.x1,\n    result.rightUpperLeg.x2,\n    result.leftLowerLeg.x1,\n    result.leftLowerLeg.x2,\n    result.rightLowerLeg.x1,\n    result.rightLowerLeg.x2,\n  ];\n\n  const highestPoint = Math.min(...allYs);\n  const lowestPoint = Math.max(...allYs);\n  const leftmostPoint = Math.min(...allXs);\n  const rightmostPoint = Math.max(...allXs);\n\n  const figureHeight = lowestPoint - highestPoint;\n  const figureWidth = rightmostPoint - leftmostPoint;\n\n  const height = config.cropToPosture\n    ? figureHeight + config.lineWidth * 2 + spacing * 2\n    : result.height;\n  const width = config.cropToPosture\n    ? figureWidth + config.lineWidth * 2 + spacing * 2\n    : result.width;\n\n  const floorY = height - config.lineWidth;\n  const yOffset = floorY - lowestPoint - spacing;\n\n  const figureMiddle = figureWidth / 2 + leftmostPoint;\n  const xOffset = width / 2 - figureMiddle;\n\n  return {\n    ...result,\n    width,\n    height,\n    floor: {\n      x1: config.lineWidth,\n      y1: floorY,\n      x2: result.width - config.lineWidth,\n      y2: floorY,\n    },\n    head: {\n      ...result.head,\n      y: result.head.y + yOffset,\n      x: result.head.x + xOffset,\n    },\n    neck: offsetLine(result.neck, yOffset, xOffset),\n    chest: offsetLine(result.chest, yOffset, xOffset),\n    abdomen: offsetLine(result.abdomen, yOffset, xOffset),\n    leftUpperArm: offsetLine(result.leftUpperArm, yOffset, xOffset),\n    leftLowerArm: offsetLine(result.leftLowerArm, yOffset, xOffset),\n    rightUpperArm: offsetLine(result.rightUpperArm, yOffset, xOffset),\n    rightLowerArm: offsetLine(result.rightLowerArm, yOffset, xOffset),\n    leftUpperLeg: offsetLine(result.leftUpperLeg, yOffset, xOffset),\n    leftLowerLeg: offsetLine(result.leftLowerLeg, yOffset, xOffset),\n    rightUpperLeg: offsetLine(result.rightUpperLeg, yOffset, xOffset),\n    rightLowerLeg: offsetLine(result.rightLowerLeg, yOffset, xOffset),\n  };\n};\n","import type { StickFigurePosition } from './stickFigurePosition';\n\nexport const DEFAULT_POSITION: StickFigurePosition = {\n  head: {\n    neckAngle: 0,\n  },\n  neck: {\n    chestAngle: 0,\n  },\n  chest: {\n    abdomenAngle: 0,\n  },\n  abdomen: {\n    hipAngle: 0,\n  },\n  leftUpperArm: {\n    shoulderAngle: 46,\n  },\n  leftLowerArm: {\n    elbowAngle: -120,\n  },\n  rightUpperArm: {\n    shoulderAngle: 46,\n  },\n  rightLowerArm: {\n    elbowAngle: -120,\n  },\n  leftUpperLeg: {\n    hipAngle: 80,\n  },\n  leftLowerLeg: {\n    kneeAngle: 165,\n  },\n  rightUpperLeg: {\n    hipAngle: 80,\n  },\n  rightLowerLeg: {\n    kneeAngle: 165,\n  },\n};\n","\"use strict\";\n\"use client\";\nimport { useMemo } from 'react';\nimport { useChakraContext } from './provider.js';\n\nfunction useToken(category, token) {\n  const sys = useChakraContext();\n  return useMemo(() => {\n    const arr = Array.isArray(token) ? token : [token];\n    return arr.map((t) => sys.token(`${category}.${t}`, t));\n  }, [sys, category, token]);\n}\n\nexport { useToken };\n","import { useEffect, useMemo, useRef } from 'react';\nimport { animate, createScope, type Scope } from 'animejs';\nimport {\n  positionStickFigure,\n  type StickFigureConfig,\n  type StickFigurePosition,\n} from '../stickFigurePosition';\nimport { DEFAULT_POSITION } from '../defaultPosition';\nimport { useToken } from '@chakra-ui/react';\n\nexport interface StickFigureProps {\n  position: Partial<StickFigurePosition> | null;\n  config: StickFigureConfig;\n  showFloor?: boolean;\n}\n\nconst DURATION = 1000;\nconst EASE = 'linear';\n\nexport const StickFigure = ({\n  position,\n  config,\n  showFloor,\n}: StickFigureProps) => {\n  const initialPosition = useRef(\n    positionStickFigure(position || DEFAULT_POSITION, config),\n  );\n\n  const svgRef = useRef<SVGSVGElement>(null);\n  const scopeRef = useRef<Scope>(null);\n\n  const currentPosition = useMemo(\n    () => positionStickFigure(position || DEFAULT_POSITION, config),\n    [position, config],\n  );\n\n  useEffect(() => {\n    svgRef.current?.setAttribute('width', currentPosition.width.toString());\n    svgRef.current?.setAttribute('height', currentPosition.height.toString());\n\n    scopeRef.current = createScope({ root: svgRef }).add((self) => {\n      animate('.head', {\n        cx: currentPosition.head.x,\n        cy: currentPosition.head.y,\n        r: currentPosition.head.radius,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.neck', {\n        x1: currentPosition.neck.x1,\n        y1: currentPosition.neck.y1,\n        x2: currentPosition.neck.x2,\n        y2: currentPosition.neck.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.chest', {\n        x1: currentPosition.chest.x1,\n        y1: currentPosition.chest.y1,\n        x2: currentPosition.chest.x2,\n        y2: currentPosition.chest.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.abdomen', {\n        x1: currentPosition.abdomen.x1,\n        y1: currentPosition.abdomen.y1,\n        x2: currentPosition.abdomen.x2,\n        y2: currentPosition.abdomen.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.leftUpperLeg', {\n        x1: currentPosition.leftUpperLeg.x1,\n        y1: currentPosition.leftUpperLeg.y1,\n        x2: currentPosition.leftUpperLeg.x2,\n        y2: currentPosition.leftUpperLeg.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.leftLowerLeg', {\n        x1: currentPosition.leftLowerLeg.x1,\n        y1: currentPosition.leftLowerLeg.y1,\n        x2: currentPosition.leftLowerLeg.x2,\n        y2: currentPosition.leftLowerLeg.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.rightUpperLeg', {\n        x1: currentPosition.rightUpperLeg.x1,\n        y1: currentPosition.rightUpperLeg.y1,\n        x2: currentPosition.rightUpperLeg.x2,\n        y2: currentPosition.rightUpperLeg.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.rightLowerLeg', {\n        x1: currentPosition.rightLowerLeg.x1,\n        y1: currentPosition.rightLowerLeg.y1,\n        x2: currentPosition.rightLowerLeg.x2,\n        y2: currentPosition.rightLowerLeg.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.leftUpperArm', {\n        x1: currentPosition.leftUpperArm.x1,\n        y1: currentPosition.leftUpperArm.y1,\n        x2: currentPosition.leftUpperArm.x2,\n        y2: currentPosition.leftUpperArm.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.leftLowerArm', {\n        x1: currentPosition.leftLowerArm.x1,\n        y1: currentPosition.leftLowerArm.y1,\n        x2: currentPosition.leftLowerArm.x2,\n        y2: currentPosition.leftLowerArm.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.rightUpperArm', {\n        x1: currentPosition.rightUpperArm.x1,\n        y1: currentPosition.rightUpperArm.y1,\n        x2: currentPosition.rightUpperArm.x2,\n        y2: currentPosition.rightUpperArm.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.rightLowerArm', {\n        x1: currentPosition.rightLowerArm.x1,\n        y1: currentPosition.rightLowerArm.y1,\n        x2: currentPosition.rightLowerArm.x2,\n        y2: currentPosition.rightLowerArm.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n\n      animate('.floor', {\n        x1: currentPosition.floor.x1,\n        y1: currentPosition.floor.y1,\n        x2: currentPosition.floor.x2,\n        y2: currentPosition.floor.y2,\n        duration: DURATION,\n        ease: EASE,\n      });\n    });\n  }, [currentPosition]);\n\n  const [\n    headColor,\n    neckColor,\n    chestColor,\n    abdomenColor,\n    leftUpperLegColor,\n    leftLowerLegColor,\n    rightUpperLegColor,\n    rightLowerLegColor,\n    rightUpperArmColor,\n    rightLowerArmColor,\n    leftUpperArmColor,\n    leftLowerArmColor,\n    floorColor,\n  ] = useToken('colors', [\n    'stickHead',\n    'stickNeck',\n    'stickChest',\n    'stickAbdomen',\n    'stickLeftUpperLeg',\n    'stickLeftLowerLeg',\n    'stickRightUpperLeg',\n    'stickRightLowerLeg',\n    'stickRightUpperArm',\n    'stickRightLowerArm',\n    'stickLeftUpperArm',\n    'stickLeftLowerArm',\n    'stickFloor',\n  ]);\n  const [bgColor] = useToken('colors', 'background');\n\n  return (\n    <svg\n      className=\"stickFigure\"\n      width={initialPosition.current.width}\n      height={initialPosition.current.height}\n      ref={svgRef}\n    >\n      <title>Stick Figure</title>\n\n      <line\n        className=\"leftUpperLeg\"\n        x1={initialPosition.current.leftUpperLeg.x1}\n        y1={initialPosition.current.leftUpperLeg.y1}\n        x2={initialPosition.current.leftUpperLeg.x2}\n        y2={initialPosition.current.leftUpperLeg.y2}\n        stroke={leftUpperLegColor}\n        strokeWidth={config.lineWidth}\n        strokeLinecap=\"round\"\n      />\n      <line\n        className=\"leftLowerLeg\"\n        x1={initialPosition.current.leftLowerLeg.x1}\n        y1={initialPosition.current.leftLowerLeg.y1}\n        x2={initialPosition.current.leftLowerLeg.x2}\n        y2={initialPosition.current.leftLowerLeg.y2}\n        stroke={leftLowerLegColor}\n        strokeWidth={config.lineWidth}\n        strokeLinecap=\"round\"\n      />\n      <line\n        className=\"chest\"\n        x1={initialPosition.current.chest.x1}\n        y1={initialPosition.current.chest.y1}\n        x2={initialPosition.current.chest.x2}\n        y2={initialPosition.current.chest.y2}\n        stroke={chestColor}\n        strokeWidth={config.lineWidth}\n        strokeLinecap=\"round\"\n      />\n      <line\n        className=\"abdomen\"\n        x1={initialPosition.current.abdomen.x1}\n        y1={initialPosition.current.abdomen.y1}\n        x2={initialPosition.current.abdomen.x2}\n        y2={initialPosition.current.abdomen.y2}\n        stroke={abdomenColor}\n        strokeWidth={config.lineWidth}\n        strokeLinecap=\"round\"\n      />\n      <line\n        className=\"rightUpperLeg\"\n        x1={initialPosition.current.rightUpperLeg.x1}\n        y1={initialPosition.current.rightUpperLeg.y1}\n        x2={initialPosition.current.rightUpperLeg.x2}\n        y2={initialPosition.current.rightUpperLeg.y2}\n        stroke={rightUpperLegColor}\n        strokeWidth={config.lineWidth}\n        strokeLinecap=\"round\"\n      />\n      <line\n        className=\"rightLowerLeg\"\n        x1={initialPosition.current.rightLowerLeg.x1}\n        y1={initialPosition.current.rightLowerLeg.y1}\n        x2={initialPosition.current.rightLowerLeg.x2}\n        y2={initialPosition.current.rightLowerLeg.y2}\n        stroke={rightLowerLegColor}\n        strokeWidth={config.lineWidth}\n        strokeLinecap=\"round\"\n      />\n      <line\n        className=\"leftUpperArm\"\n        x1={initialPosition.current.leftUpperArm.x1}\n        y1={initialPosition.current.leftUpperArm.y1}\n        x2={initialPosition.current.leftUpperArm.x2}\n        y2={initialPosition.current.leftUpperArm.y2}\n        stroke={leftUpperArmColor}\n        strokeWidth={config.lineWidth}\n        strokeLinecap=\"round\"\n      />\n      <line\n        className=\"leftLowerArm\"\n        x1={initialPosition.current.leftLowerArm.x1}\n        y1={initialPosition.current.leftLowerArm.y1}\n        x2={initialPosition.current.leftLowerArm.x2}\n        y2={initialPosition.current.leftLowerArm.y2}\n        stroke={leftLowerArmColor}\n        strokeWidth={config.lineWidth}\n        strokeLinecap=\"round\"\n      />\n      <line\n        className=\"neck\"\n        x1={initialPosition.current.neck.x1}\n        y1={initialPosition.current.neck.y1}\n        x2={initialPosition.current.neck.x2}\n        y2={initialPosition.current.neck.y2}\n        stroke={neckColor}\n        strokeWidth={config.lineWidth}\n        strokeLinecap=\"round\"\n      />\n      <circle\n        className=\"head\"\n        cx={initialPosition.current.head.x}\n        cy={initialPosition.current.head.y}\n        r={initialPosition.current.head.radius}\n        stroke={headColor}\n        strokeWidth={config.lineWidth}\n        fill={bgColor}\n      />\n      <line\n        className=\"rightUpperArm\"\n        x1={initialPosition.current.rightUpperArm.x1}\n        y1={initialPosition.current.rightUpperArm.y1}\n        x2={initialPosition.current.rightUpperArm.x2}\n        y2={initialPosition.current.rightUpperArm.y2}\n        stroke={rightUpperArmColor}\n        strokeWidth={config.lineWidth}\n        strokeLinecap=\"round\"\n      />\n      <line\n        className=\"rightLowerArm\"\n        x1={initialPosition.current.rightLowerArm.x1}\n        y1={initialPosition.current.rightLowerArm.y1}\n        x2={initialPosition.current.rightLowerArm.x2}\n        y2={initialPosition.current.rightLowerArm.y2}\n        stroke={rightLowerArmColor}\n        strokeWidth={config.lineWidth}\n        strokeLinecap=\"round\"\n      />\n      {showFloor && (\n        <line\n          className=\"floor\"\n          x1={initialPosition.current.floor.x1}\n          y1={initialPosition.current.floor.y1}\n          x2={initialPosition.current.floor.x2}\n          y2={initialPosition.current.floor.y2}\n          stroke={floorColor}\n          strokeWidth={config.lineWidth / 1.5}\n          strokeLinecap=\"round\"\n        />\n      )}\n    </svg>\n  );\n};\n"],"names":["angleLine","originX","originY","length","angle","Math","offsetLine","line","offsetY","offsetX","NEUTRAL_POSITION","positionStickFigure","_position","config","edgeX","edgeY","radius","neutral","getNeutralStickFigure","headRadius","lineWidth","upperArmLength","neckLength","torsoLength","chestLength","height","headX","width","headY","neckY2","abdomenY2","leftUpperArmY2","leftUpperLegY2","rightUpperLegY2","position","spacing","abdomenHipAngle","abdomen","chestAbdomenAngle","chest","neckChestAngle","neck","head","leftUpperArmShoulderAngle","leftUpperArm","leftLowerArm","rightUpperArmShoulderAngle","rightUpperArm","rightLowerArm","leftUpperLegHipAngle","leftUpperLeg","leftLowerLeg","rightUpperLegHipAngle","rightUpperLeg","rightLowerLeg","result","allYs","allXs","highestPoint","lowestPoint","leftmostPoint","figureWidth","rightmostPoint","figureHeight","floorY","yOffset","xOffset","DEFAULT_POSITION","useToken","category","token","sys","useChakraContext","useMemo","arr","Array","t","EASE","StickFigure","showFloor","initialPosition","useRef","svgRef","scopeRef","currentPosition","useEffect","createScope","self","animate","headColor","neckColor","chestColor","abdomenColor","leftUpperLegColor","leftLowerLegColor","rightUpperLegColor","rightLowerLegColor","rightUpperArmColor","rightLowerArmColor","leftUpperArmColor","leftLowerArmColor","floorColor","bgColor"],"mappings":"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"}